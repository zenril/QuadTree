{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/tools/QuadTree.js","webpack:///./src/index.js","webpack:///./examples/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Point","pos","data","_classCallCheck","this","x","y","point","distance","a","b","Math","sqrt","Circle","Rectangle","w","h","QuadTree","boundary","capacity","points","divisions","trigger","fn","length","contains","push","subdivide","peek","qTree","insert","console","log","refPoint","ret","intersectsWithPoint","findPoints","element","rectX","rectY","deltaX","max","min","deltaY","intersects","event","events","forEach","apply","event_bindings","create","found","_src","sub","qt","window","stroke","noFill","strokeWeight","rectMode","CENTER","rect","fill","ellipseMode","ellipse","setup","createCanvas","background","qtree","QRectangle","QPoint","QCircle","t","findInRadius"],"mappings":"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","file":"example.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class Point {\n    constructor(pos, data) {\n        this.x = pos.x;\n        this.y = pos.y;\n        this.r = pos.r || 0;\n        this.data = data;\n    }\n\n    intersects(point){\n        return (this.distance(point) <= point.r + this.r);\n    }\n\n    distance(point) {\n        var a = this.x - point.x;\n        var b = this.y - point.y;\n        return Math.sqrt( a*a + b*b );\n    }\n}\n\nclass Circle {\n    constructor(pos, data) {\n        this.x = pos.x;\n        this.y = pos.y;\n        this.r = pos.r || 0;\n        this.data = data;\n    }\n\n    intersects(point){\n        return (this.distance(point) <= point.r + this.r);\n    }\n\n    distance(point) {\n        var a = this.x - point.x;\n        var b = this.y - point.y;\n        return Math.sqrt( a*a + b*b );\n    }\n}\n\nclass Rectangle {\n    constructor(x,y,w,h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n\n    contains(point) {\n        return (\n            point.x >= this.x - this.w &&\n            point.x < this.x + this.w &&\n            point.y >= this.y - this.h &&\n            point.y < this.y + this.h\n        );\n    }\n}\n\nclass QuadTree {\n    constructor(boundary, capacity){\n        this.boundary = boundary;\n        this.capacity = capacity;\n        this.points = [];\n        this.divisions = null;\n        QuadTree.trigger('create', [this]);\n    }\n\n    static get events (){\n        if(!QuadTree.event_bindings) {\n            QuadTree.event_bindings = {\n                create : [],\n                insert : [],\n                peek : [],\n                point : [],\n                found : [],\n                intersects : []\n            };\n        }\n        return QuadTree.event_bindings;\n    }\n\n    static sub(event, fn){\n        QuadTree.events[event].push(fn);\n    }\n\n    static trigger(event, data){\n        QuadTree.events[event].forEach(element => {\n            element.apply(null, data);\n        });\n    }\n\n    peek(fn) {\n        if(this.divisions) {\n            for (let x = 0; x < this.divisions.length; x++) {\n                for (let y = 0; y < this.divisions[x].length; y++) {\n                    fn(this.divisions[x][y]);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    insert(point) {\n        if(!this.boundary.contains(point)) return;\n        if(this.points.length < this.capacity){\n            QuadTree.trigger('point', [this, point]);\n            this.points.push(point);\n        } else {\n            if(!this.divisions) {\n                this.subdivide();\n            }\n\n            this.peek(function(qTree){\n                if(!qTree.insert){\n                    console.log(qTree);\n                }\n                qTree.insert(point);\n            });\n        }\n    }\n\n    findPoints(refPoint, fn, ret) {\n        let _this = this;\n        if(!ret) ret = [];\n        if(!_this.intersectsWithPoint(refPoint)){\n            return ret;\n        }\n\n        console.log('a');\n\n        QuadTree.trigger('peek', [_this]);\n\n        if(_this.divisions) {\n            _this.peek(function(qTree){\n                qTree.findPoints(refPoint, fn, ret);\n            });\n        }\n\n        if(_this.points.length){\n            for (let p = 0; p < _this.points.length; p++) {\n                const element = _this.points[p];\n                if(!fn || fn(element)){\n                    QuadTree.trigger('found', [_this, element]);\n                    ret.push(element);\n                }\n            }\n        }\n\n        return ret;\n    }\n\n    intersectsWithPoint(point){\n        var rectX = this.boundary.x - this.boundary.w/2;\n        var rectY = this.boundary.y - this.boundary.h/2;\n\n\n\n        var deltaX = point.x - Math.max(rectX, Math.min(point.x, rectX + this.boundary.w));\n        var deltaY = point.y - Math.max(rectY, Math.min(point.y, rectY + this.boundary.h));\n        var intersects = (deltaX * deltaX + deltaY * deltaY) < (point.r * point.r);\n\n        //console.log(rectX, rectY, this.boundary.w, this.boundary.h);\n        if(intersects){\n            // window.stroke(0,100,155);\n            // window.noFill();\n            // window.strokeWeight(6.5);\n            // window.rectMode(window.CORNER);\n            // window.rect(rectX, rectY, this.boundary.w, this.boundary.h);\n            QuadTree.trigger('intersects', [this, point]);\n        } else {\n            // window.stroke(133,100,15);\n            // window.noFill();\n            // window.strokeWeight(1.5);\n            // window.rectMode(window.CORNER);\n            // window.rect(rectX, rectY, this.boundary.w, this.boundary.h);\n        }\n\n        // window.stroke(0,255,255);\n        // window.noFill();\n        // window.strokeWeight(1);\n        // window.ellipseMode(window.CENTER); // Set ellipseMode to CENTER\n        // window.ellipse(rectX, rectY, 2,2);\n\n        // window.stroke(255,0,0);\n        // window.noFill();\n        // window.strokeWeight(1);\n        // window.ellipseMode(window.CENTER); // Set ellipseMode to CENTER\n        // window.ellipse(this.boundary.x, this.boundary.y, 2,2);\n\n        return intersects;\n    }\n\n    findInRadius(refPoint, r) {\n        refPoint.r = r || refPoint.r;\n        return this.findPoints(refPoint, function(point){\n            return refPoint.intersects(point);\n        });\n    }\n\n    subdivide() {\n        //just descriptions these will get overridden\n        this.divisions = [['0:left-0top',   '1:right-0top'],\n                          ['0:left-1bottom','1:right-1bottom']];\n\n        let x = this.boundary.x;\n        let y = this.boundary.y;\n        let w = this.boundary.w;\n        let h = this.boundary.h;\n\n        let right = 1;\n        let left = 0;\n        let top = 0;\n        let bottom = 1;\n\n        this.divisions[right][top] = (new QuadTree(\n            new Rectangle(x + w/4, y - h/4, w/2, h/2),\n            this.capacity\n        ));\n\n        this.divisions[left][top] = (new QuadTree(\n            new Rectangle(x - w/4, y - h/4, w/2, h/2),\n            this.capacity\n        ));\n\n        this.divisions[right][bottom] = (new QuadTree(\n            new Rectangle(x + w/4, y + h/4, w/2, h/2),\n            this.capacity\n        ));\n\n        this.divisions[left][bottom] = (new QuadTree(\n            new Rectangle(x - w/4, y + h/4, w/2, h/2),\n            this.capacity\n        ));\n    }\n}\n\nexport {Point, QuadTree, Rectangle, Circle};","export {Point as QPoint, Rectangle as QRectangle, Circle as QCircle, QuadTree} from './tools/QuadTree';","import  {QPoint, QCircle, QRectangle, QuadTree} from '../../src';\n\nQuadTree.sub('create', function(qt){\n    //console.log('a');\n    // window.stroke(255);\n    // window.noFill();\n    // window.strokeWeight(0.5);\n    // window.rectMode(CENTER);\n    // window.rect(qt.boundary.x, qt.boundary.y, qt.boundary.w * 2, qt.boundary.h * 2);\n});\n\nQuadTree.sub('peek', function(qt){\n    //console.log('a');\n    window.stroke(255,0,0);\n    window.noFill();\n    window.strokeWeight(0.5);\n    window.rectMode(window.CENTER);\n    window.rect(qt.boundary.x, qt.boundary.y, qt.boundary.w * 2, qt.boundary.h * 2);\n});\n\nQuadTree.sub('point', function(qt, point){\n    //console.log('a');\n    // window.stroke(255,255,0);\n    // window.fill(255,255,0);\n    // window.strokeWeight(1);\n    // window.rectMode(window.CENTER);\n    // window.rect(point.x, point.y, 2, 2);\n});\n\nQuadTree.sub('found', function(qt, point){\n    //console.log('a');\n    window.stroke(255);\n    window.fill(0,0,255);\n    window.strokeWeight(1);\n    window.rectMode(window.CENTER);\n    window.rect(point.x, point.y, 1, 1);\n});\n\nQuadTree.sub('intersects', function(qt, point){\n    //console.log('a');\n    window.stroke(0,255,255);\n    window.noFill();\n    window.strokeWeight(1);\n    window.ellipseMode(window.CENTER); // Set ellipseMode to CENTER\n    window.ellipse(point.x, point.y, point.r * 2, point.r * 2);\n\n});\n\nwindow.setup = function() {\n    window.createCanvas(1500, 1500);\n    background(0);\n\n    window.qtree = new QuadTree(new QRectangle(\n        250 + 500 / 2, 250 + 500 / 2, //x,y center\n        500,500  //w,h\n    ), 4);\n    for (let y = 250; y <250 + 500; y = y + (500 / 50)) {\n        for (let x = 250; x <250 + 500; x = x + (500 / 50)) {\n            let p = new QPoint({\n                x: x,\n                y: y\n            },\n            {});\n            qtree.insert(p);\n        }\n    }\n\n    window.QCircle = QCircle;\n\n    var t = window.qtree.findInRadius(new window.QCircle({\n        x: 250 + 500 / 2,\n        y: 250 + 500 / 2,\n        r: 50\n    }));\n\n    console.log(t);\n}\n\n"],"sourceRoot":""}